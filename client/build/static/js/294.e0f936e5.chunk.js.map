{"version":3,"file":"static/js/294.e0f936e5.chunk.js","mappings":"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","sources":["components/loading/loader.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/room/chat/list.js","components/room/chat/send-button.js","components/room/room.jsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst LoaderWrapper = styled.div`\n  .lds-ellipsis {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-ellipsis div {\n    position: absolute;\n    top: 33px;\n    width: 13px;\n    height: 13px;\n    border-radius: 50%;\n    background: #5db075;\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n  }\n  .lds-ellipsis div:nth-child(1) {\n    left: 8px;\n    animation: lds-ellipsis1 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(2) {\n    left: 8px;\n    animation: lds-ellipsis2 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(3) {\n    left: 32px;\n    animation: lds-ellipsis2 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(4) {\n    left: 56px;\n    animation: lds-ellipsis3 0.6s infinite;\n  }\n  @keyframes lds-ellipsis1 {\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n  @keyframes lds-ellipsis3 {\n    0% {\n      transform: scale(1);\n    }\n    100% {\n      transform: scale(0);\n    }\n  }\n  @keyframes lds-ellipsis2 {\n    0% {\n      transform: translate(0, 0);\n    }\n    100% {\n      transform: translate(24px, 0);\n    }\n  }\n`\n\nfunction Loader() {\n  return (\n    <LoaderWrapper>\n      <div className=\"lds-ellipsis\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </LoaderWrapper>\n  )\n}\n\nexport default Loader\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport { get, isEmpty, isEqual } from 'lodash'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst ListWrapper = styled.div`\n  z-index: 2;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n\n  overflow-y: auto;\n  position: absolute;\n  top: 90px;\n  margin: 0;\n  padding: 0;\n  scroll-behavior: smooth;\n  @media only screen and (max-width: 600px) {\n    width: calc(90vw);\n    left: calc(5vw);\n    height: calc(var(--vh, 1vh) * 100 - 90px - 40px);\n  }\n  @media only screen and (min-width: 600px) {\n    width: 540px;\n    left: calc(50vw - 270px);\n    height: calc(var(--vh, 1vh) * 100 - 90px - 60px);\n  }\n  background-color: transparent;\n\n  .chat-bubble {\n    padding: 10px 14px;\n    background: #f6f6f6;\n    margin: 5px;\n    border-radius: 5px;\n    position: relative;\n    width: auto;\n    margin-bottom: 10px;\n    overflow-wrap: break-word;\n    text-align: left;\n  }\n  .chat-bubble:after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    width: 0;\n    height: 0;\n    border: 10px solid transparent;\n    border-bottom: 0;\n  }\n  .chat-bubble--left:after {\n    left: 0;\n    border-top-color: #f6f6f6;\n    border-bottom: 0;\n    border-left: 0;\n  }\n  .chat-bubble--right:after {\n    right: 0;\n    border-top-color: #5db075;\n    border-bottom: 0;\n    border-right: 0;\n  }\n  .chat-bubble.chat-bubble--left {\n    border-bottom-left-radius: 0;\n  }\n  .chat-bubble.chat-bubble--right {\n    background: #5db075;\n    border-bottom-right-radius: 0;\n    color: #fff;\n  }\n  .chat-bubble-system {\n    padding: 10px 14px;\n    background: #f6f6f6;\n    border-radius: 5px;\n    position: relative;\n    width: auto;\n    margin-bottom: 10px;\n    overflow-wrap: break-word;\n    font-size: 10px;\n    border-radius: 1.375rem;\n    margin: 5px !important;\n    text-align: center;\n  }\n`\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: ${(props) => {\n    const { message } = props\n    if (isEmpty(message.sender)) return 'center'\n    if (isEqual(message.sender, props.me)) return 'flex-end'\n    return 'flex-start'\n  }};\n\n  .message-sender {\n    margin-left: 5px;\n    font-size: 10px;\n    text-align: left;\n  }\n`\n\nconst MessageWrapper = styled.div``\n\nconst getClassNameForMessage = (sender, me) => {\n  if (isEmpty(sender)) return 'chat-bubble-system'\n  if (isEqual(sender, me)) return 'chat-bubble chat-bubble--right'\n  return 'chat-bubble chat-bubble--left'\n}\n\nfunction List({ messages, me, roomId }) {\n  return (\n    <ListWrapper id=\"messages-list\">\n      {messages.map((msg) => (\n        <Row\n          key={get(msg, '_id') + Math.floor(1000 + Math.random() * 9000)}\n          message={msg}\n          me={me}\n          id={get(msg, '_id')}\n        >\n          <div style={{ marginBottom: 10 }}>\n            {!isEmpty(msg.sender) && !isEqual(msg.sender, me) && (\n              <div className=\"message-sender\">{msg.sender}</div>\n            )}\n            <MessageWrapper className={getClassNameForMessage(msg.sender, me)}>\n              {msg.message}\n            </MessageWrapper>\n          </div>\n        </Row>\n      ))}\n    </ListWrapper>\n  )\n}\n\nexport default List\n","/* eslint-disable react/prop-types */\nimport { isEmpty } from 'lodash'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst ButtonWrapper = styled.div`\n  z-index: 5;\n  background-color: #f6f6f6;\n  border: #e8e8e8;\n\n  border-radius: 1.375rem;\n  margin: 0 auto 0 auto;\n  position: absolute;\n  bottom: 10px;\n  @media only screen and (max-width: 600px) {\n    width: calc(90vw);\n    left: calc(5vw);\n    height: 40px;\n  }\n  @media only screen and (min-width: 600px) {\n    width: 540px;\n    left: calc(50vw - 270px);\n    height: 60px;\n  }\n\n  .message-input {\n    background: transparent;\n    border: none;\n    outline: none !important;\n    height: 100%;\n    width: calc(100% - 40px);\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box; /* Firefox, other Gecko */\n    box-sizing: border-box; /* Opera/IE 8+ */\n    resize: none;\n    font-size: 15px;\n    margin: 0 40px 0 0;\n    color: #444;\n    border-radius: 1.375rem;\n    padding-top: 10px;\n    padding-bottom: 0;\n    padding-right: 0 !important;\n    padding-left: 15px;\n    display: inline-block;\n    vertical-align: middle;\n  }\n  .message-submit {\n    position: absolute;\n\n    right: 5px;\n    background-color: #5db075;\n    border: none;\n    color: #fff;\n\n    text-transform: uppercase;\n    line-height: 1;\n\n    outline: none !important;\n    transition: background 0.2s ease;\n    cursor: pointer;\n\n    padding: 0;\n    @media only screen and (max-width: 600px) {\n      width: 30px;\n      height: 30px;\n      top: 5px;\n      border-radius: 15px;\n      font-size: 18px;\n    }\n    @media only screen and (min-width: 600px) {\n      width: 40px;\n      height: 40px;\n      top: 10px;\n      border-radius: 20px;\n      font-size: 24px;\n    }\n  }\n\n  .message-submit:disabled {\n    opacity: 0.5;\n  }\n`\n\nexport default function MessageButton(props) {\n  const [value, setValue] = useState('')\n  return (\n    <ButtonWrapper {...props}>\n      <textarea\n        type=\"text\"\n        value={value}\n        className=\"message-input\"\n        placeholder=\"Message here ...\"\n        onChange={(e) => {\n          setValue(e.target.value)\n        }}\n      ></textarea>\n      <button\n        type=\"submit\"\n        className=\"message-submit\"\n        disabled={isEmpty(value)}\n        onClick={() => {\n          if (props.onSubmit) props.onSubmit(value)\n          setValue('')\n        }}\n      >\n        &uarr;\n      </button>\n    </ButtonWrapper>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport { get, isEmpty, isEqual, reverse } from 'lodash'\nimport React, { useState, useEffect } from 'react'\nimport { NotificationManager } from 'react-notifications'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Routes } from '../../constants/routes'\nimport Loader from '../loading/loader'\nimport List from './chat/list'\nimport MessageButton from './chat/send-button'\n\nconst NavWrapper = styled.div`\n  height: 90px;\n  z-index: 2;\n  position: absolute;\n  top: 0;\n  @media only screen and (max-width: 600px) {\n    min-width: calc(90vw);\n    left: calc(5vw);\n  }\n  @media only screen and (min-width: 600px) {\n    width: 540px;\n    left: calc(50vw - 270px);\n  }\n  display: flex;\n  align-items: center;\n\n  .nav-left,\n  .nav-right {\n    @media only screen and (max-width: 600px) {\n      width: 32px;\n    }\n    @media only screen and (min-width: 600px) {\n      width: 32px;\n    }\n    color: #5db075;\n    display: inline-flex;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    font-size: 15px;\n    padding: 0;\n    text-align: center;\n    justify-content: center;\n  }\n\n  .nav-title {\n    display: inline;\n\n    @media only screen and (max-width: 600px) {\n      width: calc(90vw - 64px);\n    }\n    @media only screen and (min-width: 600px) {\n      width: calc(540px - 64px);\n    }\n  }\n`\n\nfunction Room() {\n  const params = useParams()\n  const { searchParams } = new URL(window.location.href)\n  const [loading, setLoading] = useState(true)\n  const { roomId } = params\n  const username = searchParams.get('u') || undefined\n\n  const [messages, setMessages] = useState([])\n  const history = useHistory()\n  const [subscribed, setSubscribed] = useState(false)\n\n  const fetchMessages = () => {\n    const load = async () => {\n      const endpoint = `${\n        process.env.REACT_APP_SERVER_API_END_POINT || '/api/v1'\n      }/room-message/${roomId}`\n      const options = {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }\n\n      try {\n        const fetchResponse = await fetch(endpoint, options)\n        const data = await fetchResponse.json()\n        const result = get(data, 'data', [])\n        setMessages(reverse(result))\n        setTimeout(() => {\n          scrollToBottom()\n        }, 200)\n      } catch (e) {\n        NotificationManager.error('Something went wrong', undefined, 1500)\n        console.log(e)\n      }\n      setLoading(false)\n    }\n\n    load()\n  }\n\n  const handleExitRoom = () => {\n    // call API to exit room. if success -> call socket.unsubcribe\n\n    const exitRoom = async () => {\n      const endpoint = `${\n        process.env.REACT_APP_SERVER_API_END_POINT || '/api/v1'\n      }/room-user/${roomId}`\n      const options = {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username }),\n      }\n\n      try {\n        const fetchResponse = await fetch(endpoint, options)\n        const data = await fetchResponse.json()\n        const success = get(data, 'success', false)\n        if (success) {\n          NotificationManager.success(`You just left ${roomId}`, undefined, 500)\n          history.push(`${Routes.HOME}?r=${roomId}&u=${username}`)\n          if (subscribed) {\n            const socket = window.SOCKET\n            socket.emit('unsubscribe', { roomId, username })\n          }\n        } else {\n          NotificationManager.error(\n            'Unable to leave. Please try again',\n            undefined,\n            1500,\n          )\n        }\n      } catch (e) {\n        NotificationManager.error('Something went wrong', undefined, 1500)\n        console.log(e)\n      }\n      setLoading(false)\n    }\n\n    exitRoom()\n  }\n\n  const handleSendMessage = (message) => {\n    const send = async () => {\n      const endpoint = `${\n        process.env.REACT_APP_SERVER_API_END_POINT || '/api/v1'\n      }/room-message/${roomId}`\n      const options = {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ sender: username, message }),\n      }\n\n      try {\n        const fetchResponse = await fetch(endpoint, options)\n        const data = await fetchResponse.json()\n        const result = get(data, 'data', {})\n        const success = get(data, 'success', false)\n        if (success && !isEmpty(result))\n          window.SOCKET.emit('MESSAGE_SEND', result)\n      } catch (e) {\n        NotificationManager.error('Something went wrong', undefined, 1500)\n        console.log(e)\n      }\n    }\n\n    send()\n  }\n\n  const scrollToBottom = () => {\n    const elem = document.getElementById('messages-list')\n    if (elem) elem.scrollTop = elem.scrollHeight\n  }\n\n  useEffect(() => {\n    if (isEmpty(roomId) || isEmpty(username)) {\n      NotificationManager.error(\n        'Please enter your roomID and username first',\n        undefined,\n        1500,\n      )\n      history.push(`${Routes.HOME}`)\n    } else {\n      // check if user can join\n      const join = async () => {\n        const endpoint = `${\n          process.env.REACT_APP_SERVER_API_END_POINT || '/api/v1'\n        }/room-user/${roomId}/find`\n        const options = {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ username }),\n        }\n\n        try {\n          const fetchResponse = await fetch(endpoint, options)\n          const data = await fetchResponse.json()\n          const exist = get(data, 'data.exist', false)\n          if (exist) {\n            NotificationManager.error(\n              'Username exists in room. Please try another username',\n              undefined,\n              1500,\n            )\n            history.push(`${Routes.HOME}?r=${roomId}&u=${username}`)\n          } else {\n            const socket = window.SOCKET\n            socket.on('MESSAGE_RECEIVED', (msg) => {\n              setMessages((old) => {\n                const found = [...old].filter((item) =>\n                  isEqual(get(item, '_id'), get(msg, '_id')),\n                )\n                if (isEmpty(found)) return [...old, msg]\n                return [...old]\n              })\n              setTimeout(() => {\n                scrollToBottom()\n              }, 200)\n            })\n            socket.emit('subscribe', { roomId, username })\n            setSubscribed(true)\n            NotificationManager.success(`Welcome to ${roomId}`, undefined, 500)\n            fetchMessages()\n          }\n        } catch (e) {\n          console.log(e)\n        }\n      }\n\n      join()\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roomId, username])\n  return (\n    <div className=\"full-screen\">\n      {loading && <Loader />}\n      {!loading && roomId && username && (\n        <NavWrapper>\n          <button type=\"button\" className=\"nav-left\" onClick={handleExitRoom}>\n            Exit\n          </button>\n          <h2 className=\"page-title nav-title\">{roomId}</h2>\n          <div className=\"nav-right\"> </div>\n        </NavWrapper>\n      )}\n      {!loading && !isEmpty(messages) && roomId && username && (\n        <List messages={messages} me={username} roomId={roomId} />\n      )}\n      {!loading && roomId && username && (\n        <MessageButton onSubmit={handleSendMessage} />\n      )}\n    </div>\n  )\n}\n\nexport default Room\n"],"names":["LoaderWrapper","styled","className","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ListWrapper","Row","props","message","isEmpty","sender","isEqual","me","MessageWrapper","getClassNameForMessage","messages","roomId","id","map","msg","get","style","marginBottom","Math","floor","random","ButtonWrapper","MessageButton","useState","value","setValue","type","placeholder","onChange","e","target","disabled","onClick","onSubmit","NavWrapper","params","useParams","searchParams","URL","window","location","href","loading","setLoading","username","undefined","setMessages","history","useHistory","subscribed","setSubscribed","fetchMessages","load","endpoint","process","REACT_APP_SERVER_API_END_POINT","options","method","headers","Accept","fetch","fetchResponse","json","data","result","reverse","setTimeout","scrollToBottom","NotificationManager","console","log","elem","document","getElementById","scrollTop","scrollHeight","useEffect","push","Routes","join","body","JSON","stringify","socket","SOCKET","on","old","found","filter","item","emit","exitRoom","send"],"sourceRoot":""}